# This code collects only basic statistics from simulations, such that the simulation parameters might actually remain unknown. The stats collected include the t-statistics of entropy, consistency index, and compression index, and topological and tree length distances between simualted and estimated trees.

require(phangorn)

stats <- list()
resfiles <- grep("results", dir(), value = T)

for(i in 1:length(resfiles)){
      load(resfiles[i])
      for(j in 1:length(res)){
      	    stats[[length(stats) + 1]] <- vector()
      	    if(class(res[[j]]) == "try-error"){
	    	stats[[length(stats)]] <- rep(NA, 15)
		next
	    }
	    stats[[length(stats)]]["estEntr"] <- if(is.null(res[[j]]$estEntr)) NA else res[[j]]$estEntr
	    stats[[length(stats)]]["expEntr"] <- if(is.null(res[[j]]$expEntr)) NA else res[[j]]$expEntr
	    stats[[length(stats)]]["tEntr"] <- if(is.null(res[[j]]$tEntr)) NA else res[[j]]$tEntr
	    stats[[length(stats)]]["cit"] <- if(is.null(res[[j]]$cit)) NA else res[[j]]$cit
	    stats[[length(stats)]]["cip"] <- if(is.null(res[[j]]$cip)) NA else res[[j]]$cip
	    stats[[length(stats)]]["tCompress"] <- if(is.null(res[[j]]$tCompress)) NA else res[[j]]$tCompress
	    stats[[length(stats)]]["pCompress"] <- if(is.null(res[[j]]$pCompress)) NA else res[[j]]$pCompress
	    stats[[length(stats)]]["topdist"] <- if(length(res[[j]]$tree) < 5) NA else RF.dist(res[[j]]$tree, res[[j]]$trueTree, normalize = T) 
	    stats[[length(stats)]]["tldist"] <- if(length(res[[j]]$tree) < 5) NA else sum(res[[j]]$tree$edge.length) / sum(res[[j]]$trueTree$edge.length)
	    names(res[[j]]$simparams) <- c("ntaxa", "imbal", "trlen", "stemminess", "seqlen", "modelsim")
	    stats[[length(stats)]] <- c(stats[[length(stats)]], res[[j]]$simparams)
	    
      }
      print(i)
}

# Create matrix with all the summary data.

alldat <- matrix(unlist(stats), ncol = length(stats[[1]]), byrow = T)
colnames(alldat) <- names(stats[[1]])
alldat <- as.data.frame(alldat)

save(alldat, file = "summary_stats_0319.Rdata")